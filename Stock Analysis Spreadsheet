'-------------------------------------------------------------
'Create public variables
'-------------------------------------------------------------

'Create variables for the whole portfolio.
Public num_companies As Integer
Public company_name_rows(10000) As Integer

'Create variables for a single company.
Public company_index As Integer
Public company_range As Range
Public num_statements As Integer
Public entry As String
'

'-------------------------------------------------------------
'Run the entire program.
'-------------------------------------------------------------

Sub Master_Analysis()

company_index = 0
Call Find_Company_Number_And_Names
Call Analyze_Single_Company
'
'For i = 0 To num_companies - 1
'    company_index = i
'    Call Analyze_Single_Company
'Next i

End Sub

'-------------------------------------------------------------
'Find the number of companies in the spreadsheet.
'-------------------------------------------------------------

Sub Find_Company_Number_And_Names()

'Create coding variables.
Dim cell As Range
Dim first_cell_address As String

'Find the number of companies and store the row numbers of each company name.
num_companies = 0
With Worksheets("reportbuilder").Range("A1:A10000")
    Set cell = .Find("General Company Information", LookIn:=xlValues)
    company_name_rows(0) = cell.Row
    first_cell_address = cell.Address
    Do
        Set cell = .FindNext(cell)
        num_companies = num_companies + 1
        company_name_rows(num_companies) = cell.Row
    Loop While first_cell_address <> cell.Address
End With

End Sub

'-------------------------------------------------------------
'Analyze a single company.
'-------------------------------------------------------------

Sub Analyze_Single_Company()

'Create coding variables
Dim cell As Range

'Set variables for single company analysis.
Dim company_row, next_company_row As Integer
company_row = company_name_rows(company_index)
next_company_row = company_name_rows(company_index + 1)
Set company_range = Worksheets("reportbuilder").Range(Cells(company_row, 1), Cells(next_company_row, 1))

'Find the closing price.
Dim closing_price As Single
Dim closing_price_string As String
Dim closing_price_array() As String
With company_range
    Set cell = .Find("Closing Price", LookIn:=xlValues)
    closing_price_string = Cells(cell.Row + 1, 1)
    closing_price_array = Split(closing_price_string, ": ")
    closing_price_string = closing_price_array(1)
    closing_price = CSng(closing_price_string)
End With

'Find the number of statement dates.
num_statements = 0
With company_range
    Set cell = .Find("Report Date", LookIn:=xlValues)
    Do While Cells(cell.Row, 2 + num_statements * 2).Value <> ""
        num_statements = num_statements + 1
    Loop
End With

Call Analyze_Profitability
End Sub

'-------------------------------------------------------------
'Assess whether the company is profitable, based on its financial statements.
'-------------------------------------------------------------

Sub Analyze_Profitability()

entry = "Total Revenue"
Call Array_Analysis

End Sub

'-------------------------------------------------------------
'Analyze growth, groth acceleration, and variability for an accounting entry.
'-------------------------------------------------------------

Sub Array_Analysis()

'Create coding variables.
Dim cell As Range
Dim calc As Single
Dim sum As Variant

'Create data analysis variables.
ReDim entry_array(num_statements) As Integer
ReDim growth_array(num_statements - 1) As Single
ReDim acceleration_array(num_statements - 2) As Single

Dim average_value As Integer
Dim average_growth As Single
Dim average_acceleration As Single

Dim growing, accelerating As Boolean

'Load the values for each period into an array and find average.
sum = 0
With company_range
    Set cell = .Find(entry, LookIn:=xlValues)
    For p = 0 To num_statements - 1
        entry_array(p) = Cells(cell.Row, 2 + p * 2).Value
        sum = sum + entry_array(p)
    Next p
End With
average_value = sum / num_statements

'Load the growth rates for each period into an array and find average.
sum = 0
For p = 0 To num_statements - 2
    calc = (entry_array(p) - entry_array(p + 1)) / entry_array(p)
    growth_array(p) = calc
    sum = sum + calc
Next p
average_growth = sum / num_statements

'Load the acceleration rates for each period into an array and find average.
sum = 0
For p = 0 To num_statements - 3
    calc = (growth_array(p) - growth_array(p + 1)) / growth_array(p)
    acceleration_array(p) = calc
    sum = sum + calc
Next p
average_acceleration = sum / num_statements

'Set boolean variables to determine direction and speed of growth.
growing = False
accelerating = False
If average_growth > 0 Then
    growing = True
End If
If average_acceleration > 0 Then
    accelerating = True
End If

MsgBox (growing)
MsgBox (accelerating)
MsgBox (average_growth)
MsgBox (average_acceleration)

End Sub
